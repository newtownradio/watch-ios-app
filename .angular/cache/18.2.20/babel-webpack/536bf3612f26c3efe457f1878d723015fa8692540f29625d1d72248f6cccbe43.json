{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let ScrollService = /*#__PURE__*/(() => {\n  class ScrollService {\n    constructor(viewportScroller) {\n      this.viewportScroller = viewportScroller;\n      this.isScrolling = false;\n    }\n    // Enable smooth scrolling for iOS\n    enableSmoothScrolling() {\n      // Add iOS-specific scroll improvements\n      const style = document.createElement('style');\n      style.textContent = `\n      .main-content {\n        -webkit-overflow-scrolling: touch;\n        scroll-behavior: smooth;\n      }\n      \n      /* iOS momentum scrolling */\n      .main-content::-webkit-scrollbar {\n        display: none;\n      }\n      \n      /* Prevent horizontal scroll */\n      body {\n        overflow-x: hidden;\n      }\n      \n      /* Touch improvements */\n      * {\n        -webkit-tap-highlight-color: transparent;\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        user-select: none;\n      }\n      \n      /* Allow text selection in inputs */\n      input, textarea {\n        -webkit-user-select: text;\n        user-select: text;\n      }\n    `;\n      document.head.appendChild(style);\n    }\n    // Disable body scroll (for menu overlay)\n    disableBodyScroll() {\n      document.body.style.overflow = 'hidden';\n      document.body.style.position = 'fixed';\n      document.body.style.width = '100%';\n    }\n    // Enable body scroll\n    enableBodyScroll() {\n      document.body.style.overflow = '';\n      document.body.style.position = '';\n      document.body.style.width = '';\n    }\n    // Scroll to top with smooth behavior\n    scrollToTop() {\n      this.viewportScroller.scrollToPosition([0, 0]);\n    }\n    // Scroll to element with smooth behavior\n    scrollToElement(elementId) {\n      this.viewportScroller.scrollToAnchor(elementId);\n    }\n    // Get current scroll position\n    getScrollPosition() {\n      return this.viewportScroller.getScrollPosition();\n    }\n    // Check if user is scrolling\n    isUserScrolling() {\n      return this.isScrolling;\n    }\n    // Set scroll state\n    setScrollState(scrolling) {\n      this.isScrolling = scrolling;\n      if (this.scrollTimeout) {\n        clearTimeout(this.scrollTimeout);\n      }\n      if (scrolling) {\n        this.scrollTimeout = setTimeout(() => {\n          this.isScrolling = false;\n        }, 150);\n      }\n    }\n    static {\n      this.ɵfac = function ScrollService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScrollService)(i0.ɵɵinject(i1.ViewportScroller));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ScrollService,\n        factory: ScrollService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ScrollService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}